generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                       String            @id @default(cuid())
  idNo                     Int               @unique @default(autoincrement())
  dealerId                 String            @default("")
  firstName                String            @default("")
  lastName                 String            @default("")
  email                    String            @default("")
  username                 String            @default("")
  businessName             String            @default("")
  mobile                   String            @unique @default("")
  password                 String?
  BalanceEMDAmount         Int?              @default(0)
  pancardNo                String            @unique @default("")
  idProofNo                String            @default("")
  country                  String            @default("")
  city                     String            @default("")
  role                     UserRoleType      @default(dealer)
  state                    StateNames
  userCategory             String            @default("")
  tempToken                Int?              @unique
  createdAt                DateTime?         @default(now())
  updatedAt                DateTime?         @updatedAt
  accessToken              String?
  isDeleted                Boolean           @default(false)
  status                   UserStatusType?   @default(pending)
  otp                      String?
  otp_gen                  DateTime?
  eventCreatedBy           Event[]           @relation("event_createdBy")
  execlUploadCreatedBy     ExcelUpload[]     @relation("excelupload_createdBy")
  locationCreatedBy        Location[]        @relation("location_createdBy")
  paymentCreatedBy         Payment[]         @relation("Payment_createdBy")
  payments                 Payment[]         @relation("Payment_user")
  sellerCreatedBy          Seller[]          @relation("seller_createdBy")
  statusCreatedBy          Status[]          @relation("status_createdBy")
  vehicleCreatedBy         Vehicle[]         @relation("vehicle_createdBy")
  activeBids               Vehicle[]         @relation("Vehicle_currentBidUser")
  VehicleCategoryCreatedBy VehicleCategory[] @relation("vehiclecategory_createdBy")
  eventDetail              Event[]           @relation("Event_participants")
}

model Location {
  id          String     @id @default(cuid())
  name        String     @unique @default("")
  country     String     @default("india")
  state       StateNames
  createdById String?
  createdAt   DateTime?  @default(now())
  updatedAt   DateTime?  @updatedAt
  isDeleted   Boolean    @default(false)
  events      Event[]    @relation("Event_location")
  createdBy   User?      @relation("location_createdBy", fields: [createdById], references: [id])
}

model VehicleCategory {
  id          String    @id @default(cuid())
  name        String    @unique @default("")
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt
  createdById String?
  isDeleted   Boolean   @default(false)
  events      Event[]   @relation("Event_vehicleCategory")
  createdBy   User?     @relation("vehiclecategory_createdBy", fields: [createdById], references: [id])
}

model Seller {
  id                   String    @id @default(cuid())
  name                 String    @unique @default("")
  contactPerson        String    @default("")
  GSTNumber            String    @default("")
  billingContactPerson String    @default("")
  mobile               String    @default("")
  nationalHead         String    @default("")
  logo                 String    @default("")
  createdAt            DateTime? @default(now())
  updatedAt            DateTime? @updatedAt
  createdById          String?
  isDeleted            Boolean   @default(false)
  events               Event[]   @relation("Event_seller")
  createdBy            User?     @relation("seller_createdBy", fields: [createdById], references: [id])
}

model Vehicle {
  id                     String                @id @default(cuid())
  vehicleIndexNo         Int                   @default(autoincrement())
  registrationNumber     String
  bidTimeExpire          DateTime
  bidStartTime           DateTime
  bidAmountUpdate        Int?
  currentBidAmount       Int?                  @default(0)
  startBidAmount         Float?                @default(0)
  currentBidUserId       String?
  eventId                String?
  bidStatus              VehicleBidStatusType? @default(pending)
  loanAgreementNo        String
  registeredOwnerName    String                @default("")
  quoteIncreament        Int?                  @default(1000)
  make                   String                @default("")
  model                  String                @default("")
  varient                String                @default("")
  category               String                @default("")
  fuel                   String                @default("")
  type                   String                @default("")
  rcStatus               String                @default("")
  YOM                    Int?
  ownership              Int?
  mileage                Int?
  kmReading              Int?                  @default(0)
  insuranceStatus        String                @default("")
  yardLocation           String                @default("")
  startPrice             Float?                @default(0)
  reservePrice           Float?                @default(0)
  repoDt                 String?
  veicleLocation         String                @default("")
  vehicleRemarks         String                @default("")
  auctionManager         String                @default("")
  parkingCharges         String                @default("")
  insurance              String                @default("")
  insuranceValidTill     String?
  tax                    String                @default("")
  taxValidityDate        String?
  fitness                String                @default("")
  permit                 String                @default("")
  engineNo               String                @default("")
  chassisNo              String                @default("")
  image                  String                @default("")
  inspectionLink         String                @default("")
  autobseContact         String                @default("")
  autobse_contact_person String                @default("")
  vehicleCondition       String                @default("")
  powerSteering          String                @default("")
  shape                  String                @default("")
  color                  String                @default("")
  state                  String                @default("")
  city                   String                @default("")
  area                   String                @default("")
  paymentTerms           String                @default("")
  dateOfRegistration     String?
  hypothication          String                @default("")
  climateControl         String                @default("")
  doorCount              Int?
  gearBox                String                @default("")
  buyerFees              String                @default("")
  rtoFine                String                @default("")
  parkingRate            String                @default("")
  approxParkingCharges   String                @default("")
  clientContactPerson    String                @default("")
  clientContactNo        String                @default("")
  additionalRemarks      String                @default("")
  lotNumber              Int?
  createdAt              DateTime?             @default(now())
  updatedAt              DateTime?             @updatedAt
  createdById            String?
  isDeleted              Boolean               @default(false)
  createdBy              User?                 @relation("vehicle_createdBy", fields: [createdById], references: [id])
  currentBidUser         User?                 @relation("Vehicle_currentBidUser", fields: [currentBidUserId], references: [id])
  event                  Event?                @relation("Vehicle_event", fields: [eventId], references: [id])
}

model Event {
  id                        String            @id @default(cuid())
  eventNo                   Int               @default(autoincrement())
  startDate                 DateTime
  endDate                   DateTime
  firstVehicleEndDate       DateTime?
  pauseDate                 DateTime?
  pausedTotalTime           Int?              @default(0)
  sellerId                  String?
  vehicleCategoryId         String?
  locationId                String?
  noOfBids                  Int
  status                    EventStatusType?  @default(active)
  downloadableFile_filename String?
  termsAndConditions        String            @default("")
  createdAt                 DateTime?         @default(now())
  updatedAt                 DateTime?         @updatedAt
  createdById               String?
  bidLock                   EventBidLockType? @default(unlocked)
  extraTimeTrigerIn         Int?              @default(2)
  extraTime                 Int?              @default(2)
  vehicleLiveTimeIn         Int?              @default(0)
  gapInBetweenVehicles      Int?              @default(0)
  isDeleted                 Boolean           @default(false)
  eventCategory             EventCategory
  createdBy                 User?             @relation("event_createdBy", fields: [createdById], references: [id])
  location                  Location?         @relation("Event_location", fields: [locationId], references: [id])
  seller                    Seller?           @relation("Event_seller", fields: [sellerId], references: [id])
  vehicleCategory           VehicleCategory?  @relation("Event_vehicleCategory", fields: [vehicleCategoryId], references: [id])
  vehicles                  Vehicle[]         @relation("Vehicle_event")
  participants              User[]            @relation("Event_participants")
}

model ExcelUpload {
  id            String    @id @default(cuid())
  name          String    @default("")
  file_filename String?
  createdAt     DateTime? @default(now())
  updatedAt     DateTime? @updatedAt
  createdById   String?
  isDeleted     Boolean   @default(false)
  createdBy     User?     @relation("excelupload_createdBy", fields: [createdById], references: [id])
}

model Status {
  id          String             @id @default(cuid())
  status      PaymentStatusTypes @default(pending)
  comment     String?
  createdAt   DateTime?          @default(now())
  updatedAt   DateTime?          @updatedAt
  createdById String?
  isDeleted   Boolean            @default(false)
  createdBy   User?              @relation("status_createdBy", fields: [createdById], references: [id])
}

model Payment {
  id                 String              @id @default(cuid())
  refNo              Int                 @default(autoincrement())
  amount             Int?                @default(10000)
  description        String              @default("")
  userId             String?
  image              String?
  createdAt          DateTime?           @default(now())
  updatedAt          DateTime?           @updatedAt
  registrationExpire DateTime?
  isDeleted          Boolean             @default(false)
  status             PaymentStatusTypes? @default(pending)
  createdById        String?
  paymentFor         PaymentType
  createdBy          User?               @relation("Payment_createdBy", fields: [createdById], references: [id])
  user               User?               @relation("Payment_user", fields: [userId], references: [id])
}

model RecentSold {
  id          String    @id @default(cuid())
  image       String?
  vehicleName String?
  location    String?
  soldDate    String?
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt
  isDeleted   Boolean   @default(false)
}

model Enquiry {
  id        String               @id @default(cuid())
  firstName String?
  lastName  String?
  state     StateNames
  mobile    String
  message   String?              @default("")
  status    ContactUsStatusType? @default(created)
  createdAt DateTime?            @default(now())
  updatedAt DateTime?            @updatedAt
  isDeleted Boolean              @default(false)
}

enum EventStatusType {
  pending
  blocked
  active
  inactive
  stop
  pause
}

enum EventBidLockType {
  locked
  unlocked
}

enum VehicleBidStatusType {
  pending
  approved
  fulfilled
  declined
}

enum UserRoleType {
  admin
  staff
  seller
  dealer
}

enum UserStatusType {
  pending
  blocked
  active
  inactive
}

enum StateNames {
  Maharashtra
  Bihar
  Chhattisgarh
  Karnataka
  Manipur
  Arunachal_Pradesh
  Assam
  Gujarat
  Punjab
  Mizoram
  Andhra_Pradesh
  West_Bengal
  Goa
  Haryana
  Himachal_Pradesh
  Kerala
  Rajasthan
  Jharkhand
  Madhya_Pradesh
  Odisha
  Nagaland
  TamilNadu
  Uttar_Pradesh
  Telangana
  Meghalaya
  Sikkim
  Tripura
  Uttarakhand
  Jammu_and_Kashmir
  Delhi
}

enum PaymentStatusTypes {
  approved
  pending
  rejected
}

enum PaymentType {
  registrations
  emd
  openBids
}

enum ContactUsStatusType {
  created
  solved
}

enum EventCategory {
  open
  online
}
