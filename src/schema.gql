# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: String!
  idNo: Float!
  email: String!
  username: String!
  role: String!
  firstName: String!
  lastName: String!
  businessName: String!
  mobile: String!
  BalanceEMDAmount: Float
  pancardNo: String!
  idProofNo: String!
  country: String!
  city: String!
  userCategory: String!
  tempToken: Float
}

type LoginResponse {
  access_token: String!
}

type Location {
  id: String!
  name: String!
  state: StateNames!
  createdAt: DateTime
  updatedAt: DateTime
  country: String
  createdById: String
}

enum StateNames {
  Maharashtra
  Bihar
  Chhattisgarh
  Karnataka
  Manipur
  Arunachal_Pradesh
  Assam
  Gujarat
  Punjab
  Mizoram
  Andhra_Pradesh
  West_Bengal
  Goa
  Haryana
  Himachal_Pradesh
  Kerala
  Rajasthan
  Jharkhand
  Madhya_Pradesh
  Odisha
  Nagaland
  TamilNadu
  Uttar_Pradesh
  Telangana
  Meghalaya
  Sikkim
  Tripura
  Uttarakhand
  Jammu_and_Kashmir
  Delhi
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type VehicleCategory {
  id: String!
  name: String!
  createdAt: DateTime
  updatedAt: DateTime
  createdById: String
}

type Seller {
  id: String!
  name: String!
  contactPerson: String!
  GSTNumber: String!
  billingContactPerson: String!
  mobile: String!
  nationalHead: String!
  logo: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  createdById: String!
}

type Vehicle {
  id: String!
  vehicleIndexNo: Float!
  registrationNumber: String!
  bidTimeExpire: DateTime!
  bidStartTime: DateTime!
  bidAmountUpdate: Float
  currentBidAmount: Float
  startBidAmount: Float
  loanAgreementNo: String!
  registeredOwnerName: String!
  quoteIncreament: Float
  make: String!
  model: String!
  varient: String!
  category: String!
  fuel: String!
  type: String!
  rcStatus: String!
  YOM: Float
  ownership: Float
  mileage: Float
  kmReading: Float
  insuranceStatus: String!
  yardLocation: String!
  startPrice: Float
  reservePrice: Float
  repoDt: String
  veicleLocation: String!
  vehicleRemarks: String!
  auctionManager: String!
  parkingCharges: String!
  insurance: String!
  insuranceValidTill: String
  tax: String!
  taxValidityDate: String
  fitness: String!
  permit: String!
  engineNo: String!
  chassisNo: String!
  image: String!
  inspectionLink: String!
  autobseContact: String!
  autobse_contact_person: String!
  vehicleCondition: String!
  powerSteering: String!
  shape: String!
  color: String!
  state: String!
  city: String!
  area: String!
  paymentTerms: String!
  dateOfRegistration: String
  hypothication: String!
  climateControl: String!
  doorCount: Float
  gearBox: String!
  buyerFees: String!
  rtoFine: String!
  parkingRate: String!
  approxParkingCharges: String!
  clientContactPerson: String!
  clientContactNo: String!
  additionalRemarks: String!
  lotNumber: Float
  createdAt: DateTime
  updatedAt: DateTime
  createdById: String
}

type Bid {
  id: String!
  name: String!
  amount: Float!
  userId: String!
  bidVehicleId: String!
}

type Event {
  id: String!
  eventNo: Float!
  eventCategory: String
  startDate: DateTime!
  endDate: DateTime!
  firstVehicleEndDate: DateTime!
  pauseDate: DateTime
  pausedTotalTime: Float
  sellerId: String!
  vehicleCategoryId: String!
  locationId: String!
  noOfBids: Float!
  downloadableFile_filesize: Float
  downloadableFile_filename: String
  termsAndConditions: String!
  createdAt: DateTime
  updatedAt: DateTime
  createdById: String!
  extraTimeTrigerIn: Float
  extraTime: Float
  vehicleLiveTimeIn: Float
  gapInBetweenVehicles: Float
}

type Excelupload {
  id: String!
  name: String
  file_filename: String!
  createdAt: DateTime
  updatedAt: DateTime
  createdById: String
}

type Status {
  status: String!
  comment: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  createdById: String!
}

type Payment {
  refNo: Float
  amount: Float
  description: String
  statusId: String
  userId: String
  image: String
  createdAt: DateTime
  updatedAt: DateTime
  createdById: String
  registrationExpire: DateTime
}

type Recentsold {
  image: String!
  vehicleName: String!
  location: String!
  soldDate: DateTime!
}

type Query {
  vehicles: [Vehicle!]!
  vehicle(where: VehicleWhereUniqueInput!): Vehicle!
  deletedVehicles: [Vehicle!]!
  deletedVehicle(where: VehicleWhereUniqueInput!): Vehicle!
  listVehiclesFromQueue: [Vehicle!]!
  Bids: [Bid!]!
  Bid(id: String!): Bid!
  users: [User]!
  user(where: UserWhereUniqueInput!): User
  deletedUser(where: UserWhereUniqueInput!): User
  deletedUsers: [User]!
  locations: [Location!]!
  location(where: LocationWhereUniqueInput!): Location!
  deletedLocations: [Location!]!
  deletedLocation(where: LocationWhereUniqueInput!): Location!
  vehicleCategories: [VehicleCategory!]!
  vehicleCategory(where: VehicleCategoryWhereUniqueInput!): VehicleCategory!
  deletedVehicleCategories: [VehicleCategory!]!
  deletedVehicleCategory(where: VehicleCategoryWhereUniqueInput!): VehicleCategory!
  sellers: [Seller!]!
  seller(where: SellerWhereUniqueInput!): Seller!
  deletedSellers: [Seller!]!
  deletedSeller(where: SellerWhereUniqueInput!): Seller!
  events: [Event!]!
  event(where: EventWhereUniqueInput!): Event!
  deletedEvents: [Event!]!
  deletedEvent(where: EventWhereUniqueInput!): Event!
  excelUploads: [Excelupload!]!
  excelUpload(where: ExcelWhereUniqueInput!): Excelupload!
  statuses: [Status!]!
  status(where: StatusWhereUniqueInput!): Status!
  deletedStatuses: [Status!]!
  deletedStatus(where: StatusWhereUniqueInput!): Status!
  payments: [Payment!]!
  payment(where: PaymentWhereUniqueInput!): Payment!
  deletedPayments: [Payment!]!
  deletedPayment(where: PaymentWhereUniqueInput!): Payment!
  recentSolds: [Recentsold!]!
}

input VehicleWhereUniqueInput {
  id: String
}

input UserWhereUniqueInput {
  id: String
  mobile: String
  tempToken: Float
  idNo: Float
}

input LocationWhereUniqueInput {
  id: String
  name: String
  state: String
}

input VehicleCategoryWhereUniqueInput {
  id: String
  name: String
}

input SellerWhereUniqueInput {
  id: String
  name: String
}

input EventWhereUniqueInput {
  id: String
}

input ExcelWhereUniqueInput {
  id: String
}

input StatusWhereUniqueInput {
  id: String
}

input PaymentWhereUniqueInput {
  id: String
}

type Mutation {
  createVehicle(userId: String!, eventId: String!, createVehicleInput: CreateVehicleInput!): Vehicle!
  updateVehicle(where: VehicleWhereUniqueInput!, updateVehicleInput: UpdateVehicleInput!): Vehicle!
  deleteVehicle(where: VehicleWhereUniqueInput!): Vehicle!
  restorevehicle(where: VehicleWhereUniqueInput!): Vehicle!
  placeBid(userId: String!, bidVehicleId: String!, createBidInput: CreateBidInput!): Bid!
  createBid(userId: String!, bidVehicleId: String!, createBidInput: CreateBidInput!): Bid!
  updateBid(id: String!, updateBidInput: UpdateBidInput!): Bid!
  deleteBid(id: String!): Bid!
  createUser(data: CreateUserInput!): User!
  updateUser(data: UpdateUserInput!, where: UserWhereUniqueInput!): User!
  deleteUser(where: UserWhereUniqueInput!): User!
  login(loginInput: LoginUserInput!): LoginResponse!
  createLocation(createLocationInput: CreateLocationInput!): Location!
  updateLocation(where: LocationWhereUniqueInput!, updateLocationInput: UpdateLocationInput!): Location!
  deleteLocation(where: LocationWhereUniqueInput!): Location!
  restoreLocation(where: LocationWhereUniqueInput!): Location!
  createVehiclecategory(createVehiclecategoryInput: CreateVehiclecategoryInput!): VehicleCategory!
  updateVehicleCategory(where: VehicleCategoryWhereUniqueInput!, updateVehiclecategoryInput: UpdateVehiclecategoryInput!): VehicleCategory!
  deleteVehiclecategory(where: VehicleCategoryWhereUniqueInput!): VehicleCategory!
  restoreVehicleCategory(where: VehicleCategoryWhereUniqueInput!): VehicleCategory!
  createSeller(createSellerInput: CreateSellerInput!): Seller!
  updateSeller(where: SellerWhereUniqueInput!, updateSellerInput: UpdateSellerInput!): Seller!
  deleteSeller(where: SellerWhereUniqueInput!): Seller!
  restoreSeller(where: SellerWhereUniqueInput!): Seller!
  createEvent(sellerId: String!, vehicleCategoryId: String!, locationId: String!, createEventInput: CreateEventInput!): Event!
  updateEvent(where: EventWhereUniqueInput!, updateEventInput: UpdateEventInput!): Event!
  deleteEvent(where: EventWhereUniqueInput!): Event!
  restoreEvent(where: EventWhereUniqueInput!): Event!
  createExcelupload(userId: String!, eventId: String!, createExceluploadInput: CreateExceluploadInput!): Excelupload!
  deleteExcelupload(where: ExcelWhereUniqueInput!): Excelupload!
  restoreExcelUpload(where: ExcelWhereUniqueInput!): Excelupload!
  createStatus(createStatusInput: CreateStatusInput!): Status!
  updateStatus(where: StatusWhereUniqueInput!, updateStatusInput: UpdateStatusInput!): Status!
  deleteStatus(where: StatusWhereUniqueInput!): Status!
  restoreStatus(where: StatusWhereUniqueInput!): Status!
  createPayment(createPaymentInput: CreatePaymentInput!): Payment!
  updatePayment(where: PaymentWhereUniqueInput!, updatePaymentInput: UpdatePaymentInput!): Payment!
  deletePayment(where: PaymentWhereUniqueInput!): Payment!
  restorePayment(where: PaymentWhereUniqueInput!): Payment!
  createRecentsold(createRecentsoldInput: CreateRecentsoldInput!): Recentsold!
  updateRecentsold(where: RecentsoldWhereUniqueInput!, updateRecentsoldInput: UpdateRecentsoldInput!): Recentsold!
  deleteRecentsold(where: RecentsoldWhereUniqueInput!): Recentsold!
}

input CreateVehicleInput {
  registrationNumber: String!
  bidAmountUpdate: Float
  currentBidAmount: Float
  startBidAmount: Float
  loanAgreementNo: String!
  registeredOwnerName: String!
  quoteIncreament: Float
  make: String!
  model: String!
  varient: String!
  category: String!
  fuel: String!
  type: String!
  rcStatus: String!
  YOM: Float
  ownership: Float
  mileage: Float
  kmReading: Float
  insuranceStatus: String!
  yardLocation: String!
  startPrice: Float
  reservePrice: Float
  repoDt: String
  veicleLocation: String!
  vehicleRemarks: String!
  auctionManager: String!
  parkingCharges: String!
  insurance: String!
  insuranceValidTill: String
  tax: String!
  taxValidityDate: String
  fitness: String!
  permit: String!
  engineNo: String!
  chassisNo: String!
  image: String!
  inspectionLink: String!
  autobseContact: String!
  autobse_contact_person: String!
  vehicleCondition: String!
  powerSteering: String!
  shape: String!
  color: String!
  state: String!
  city: String!
  area: String!
  paymentTerms: String!
  dateOfRegistration: String
  hypothication: String!
  climateControl: String!
  doorCount: Float
  gearBox: String!
  buyerFees: String!
  rtoFine: String!
  parkingRate: String!
  approxParkingCharges: String!
  clientContactPerson: String!
  clientContactNo: String!
  additionalRemarks: String!
  lotNumber: Float
}

input UpdateVehicleInput {
  registrationNumber: String
  bidAmountUpdate: Float
  currentBidAmount: Float
  startBidAmount: Float
  loanAgreementNo: String
  registeredOwnerName: String
  quoteIncreament: Float
  make: String
  model: String
  varient: String
  category: String
  fuel: String
  type: String
  rcStatus: String
  YOM: Float
  ownership: Float
  mileage: Float
  kmReading: Float
  insuranceStatus: String
  yardLocation: String
  startPrice: Float
  reservePrice: Float
  repoDt: String
  veicleLocation: String
  vehicleRemarks: String
  auctionManager: String
  parkingCharges: String
  insurance: String
  insuranceValidTill: String
  tax: String
  taxValidityDate: String
  fitness: String
  permit: String
  engineNo: String
  chassisNo: String
  image: String
  inspectionLink: String
  autobseContact: String
  autobse_contact_person: String
  vehicleCondition: String
  powerSteering: String
  shape: String
  color: String
  state: String
  city: String
  area: String
  paymentTerms: String
  dateOfRegistration: String
  hypothication: String
  climateControl: String
  doorCount: Float
  gearBox: String
  buyerFees: String
  rtoFine: String
  parkingRate: String
  approxParkingCharges: String
  clientContactPerson: String
  clientContactNo: String
  additionalRemarks: String
  lotNumber: Float
  bidTimeExpire: String
  bidStartTime: String
}

input CreateBidInput {
  name: String!
  amount: Float!
}

input UpdateBidInput {
  name: String!
  amount: Float!
}

input CreateUserInput {
  email: String
  username: String
  firstName: String
  lastName: String
  businessName: String
  mobile: String!
  password: String
  BalanceEMDAmount: Float
  pancardNo: String
  idProofNo: String
  country: String
  city: String
  userCategory: String
  tempToken: Float
  accessToken: String
  role: UserRoleType
  state: StateNames!
}

enum UserRoleType {
  admin
  staff
  seller
  dealer
}

input UpdateUserInput {
  email: String
  username: String
  firstName: String
  lastName: String
  businessName: String
  mobile: String
  password: String
  BalanceEMDAmount: Float
  pancardNo: String
  idProofNo: String
  country: String
  city: String
  userCategory: String
  tempToken: Float
  role: UserRoleType!
  state: StateNames
}

input LoginUserInput {
  mobile: String!
  password: String!
}

input CreateLocationInput {
  name: String!
  state: StateNames!
}

input UpdateLocationInput {
  name: String
  state: StateNames
}

input CreateVehiclecategoryInput {
  name: String!
}

input UpdateVehiclecategoryInput {
  name: String
}

input CreateSellerInput {
  name: String!
  contactPerson: String!
  GSTNumber: String!
  billingContactPerson: String!
  mobile: String!
  nationalHead: String!
  logo: String!
}

input UpdateSellerInput {
  name: String
  contactPerson: String
  GSTNumber: String
  billingContactPerson: String
  mobile: String
  nationalHead: String
  logo: String
}

input CreateEventInput {
  eventCategory: String
  startDate: DateTime!
  endDate: DateTime!
  firstVehicleEndDate: DateTime
  pauseDate: DateTime
  pausedTotalTime: Float
  noOfBids: Float!
  downloadableFile_filesize: Float
  downloadableFile_filename: String
  termsAndConditions: String!
  extraTimeTrigerIn: Float
  extraTime: Float
  vehicleLiveTimeIn: Float
  gapInBetweenVehicles: Float
  bidLock: String = "unlocked"
  status: String = "active"
}

input UpdateEventInput {
  eventCategory: String
  startDate: DateTime
  endDate: DateTime
  firstVehicleEndDate: DateTime
  pauseDate: DateTime
  pausedTotalTime: Float
  noOfBids: Float
  downloadableFile_filesize: Float
  downloadableFile_filename: String
  termsAndConditions: String
  extraTimeTrigerIn: Float
  extraTime: Float
  vehicleLiveTimeIn: Float
  gapInBetweenVehicles: Float
  bidLock: String = "unlocked"
  status: String = "active"
  sellerId: String
  vehicleCategoryId: String
  locationId: String
  createdAt: DateTime
  updatedAt: DateTime
}

input CreateExceluploadInput {
  name: String!
  file_filename: String!
}

input CreateStatusInput {
  status: PaymentStatusTypes!
  comment: String!
}

enum PaymentStatusTypes {
  approved
  pending
  rejected
}

input UpdateStatusInput {
  status: PaymentStatusTypes!
  comment: String
}

input CreatePaymentInput {
  amount: Float!
  description: String!
  image: String!
  registrationExpire: DateTime!
}

input UpdatePaymentInput {
  amount: Float
  description: String
  image: String
  registrationExpire: DateTime
}

input CreateRecentsoldInput {
  image: String!
  vehicleName: String!
  location: String!
  soldDate: DateTime!
}

input RecentsoldWhereUniqueInput {
  id: String
}

input UpdateRecentsoldInput {
  image: String!
  vehicleName: String!
  location: String!
  soldDate: DateTime!
}