# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: String!
  idNo: Float!
  email: String!
  username: String!
  role: String!
  firstName: String!
  lastName: String!
  businessName: String!
  mobile: String!
  BalanceEMDAmount: Float
  pancardNo: String!
  idProofNo: String!
  country: String!
  city: String!
  userCategory: String!
  tempToken: Float
}

type LoginResponse {
  access_token: String!
}

type State {
  id: String!
  name: String!
  createdAt: DateTime
  updatedAt: DateTime
  createdById: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Location {
  id: String!
  name: String!
  stateId: String!
  createdAt: DateTime
  updatedAt: DateTime
  country: String
  createdById: String
}

type VehicleCategory {
  id: String!
  name: String!
  createdAt: DateTime
  updatedAt: DateTime
  createdById: String
}

type Seller {
  id: String!
  name: String!
  contactPerson: String!
  GSTNumber: String!
  billingContactPerson: String!
  mobile: String!
  nationalHead: String!
  logo: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  createdById: String!
}

type Vehicle {
  id: String!
  vehicleIndexNo: Float!
  registrationNumber: String!
  bidTimeExpire: DateTime!
  bidStartTime: DateTime!
  bidAmountUpdate: Float
  currentBidAmount: Float
  startBidAmount: Float
  loanAgreementNo: String!
  registeredOwnerName: String!
  quoteIncreament: Float
  make: String!
  model: String!
  varient: String!
  categoty: String!
  fuel: String!
  type: String!
  rcStatus: String!
  yearOfManufacture: Float
  ownership: Float
  mileage: Float
  kmReading: Float
  insuranceStatus: String!
  yardLocation: String!
  startPrice: Float
  reservePrice: Float
  repoDt: String
  veicleLocation: String!
  vehicleRemarks: String!
  auctionManager: String!
  parkingCharges: String!
  insurance: String!
  insuranceValidTill: String
  tax: String!
  taxValidityDate: String
  fitness: String!
  permit: String!
  fitnessPermit: String!
  engineNo: String!
  chassisNo: String!
  image: String!
  inspectionLink: String!
  autobseContact: String!
  autobse_contact_person: String!
  vehicleCondition: String!
  powerSteering: String!
  shape: String!
  color: String!
  state: String!
  city: String!
  area: String!
  paymentTerms: String!
  dateOfRegistration: String
  hypothication: String!
  climateControl: String!
  doorCount: Float
  gearBox: String!
  buyerFees: String!
  rtoFine: String!
  parkingRate: String!
  approxParkingCharges: String!
  clientContactPerson: String!
  clientContactNo: String!
  additionalRemarks: String!
  lotNumber: Float
  createdAt: DateTime
  updatedAt: DateTime
  createdById: String
}

type Query {
  users: [User]!
  user(where: UserWhereUniqueInput!): User
  deletedUser(where: UserWhereUniqueInput!): User
  deletedUsers: [User]!
  States: [State!]!
  State(where: StateWhereUniqueInput!): State!
  deletedStates: [State!]!
  deletedState(where: StateWhereUniqueInput!): State!
  restoreState(where: StateWhereUniqueInput!): State!
  locations: [Location!]!
  location(where: LocationWhereUniqueInput!): Location!
  deletedLocations: [Location!]!
  deletedLocation(where: LocationWhereUniqueInput!): Location!
  restoreLocation(where: LocationWhereUniqueInput!): Location!
  vehicleCategories: [VehicleCategory!]!
  vehicleCategory(where: VehicleCategoryWhereUniqueInput!): VehicleCategory!
  deletedVehicleCategories: [VehicleCategory!]!
  deletedVehicleCategory(where: VehicleCategoryWhereUniqueInput!): VehicleCategory!
  restoreVehicleCategory(where: VehicleCategoryWhereUniqueInput!): VehicleCategory!
  sellers: [Seller!]!
  seller(where: SellerWhereUniqueInput!): Seller!
  deletedSellers: [Seller!]!
  deletedSeller(where: SellerWhereUniqueInput!): Seller!
  restoreSeller(where: SellerWhereUniqueInput!): Seller!
  vehicles: [Vehicle!]!
  vehicle(where: VehicleWhereUniqueInput!): Vehicle!
  deletedVehicles: [Vehicle!]!
  deletedVehicle(where: VehicleWhereUniqueInput!): Vehicle!
  restorevehicle(where: VehicleWhereUniqueInput!): Vehicle!
}

input UserWhereUniqueInput {
  id: String
  mobile: String
  tempToken: Float
  idNo: Float
}

input StateWhereUniqueInput {
  id: String
  name: String
}

input LocationWhereUniqueInput {
  id: String
  name: String
}

input VehicleCategoryWhereUniqueInput {
  id: String
  name: String
}

input SellerWhereUniqueInput {
  id: String
  name: String
}

input VehicleWhereUniqueInput {
  id: String
}

type Mutation {
  createUser(data: CreateUserInput!): User!
  updateUser(data: UpdateUserInput!, where: UserWhereUniqueInput!): User!
  deleteUser(where: UserWhereUniqueInput!): User!
  login(loginInput: LoginUserInput!): LoginResponse!
  createState(userId: String!, createStateInput: CreateStateInput!): State!
  deleteState(where: StateWhereUniqueInput!): State!
  updateState(where: StateWhereUniqueInput!, updateStateInput: UpdateStateInput!): State!
  createLocation(userId: String!, stateId: String!, createLocationInput: CreateLocationInput!): Location!
  updateLocation(where: LocationWhereUniqueInput!, updateLocationInput: UpdateLocationInput!): Location!
  deleteLocation(where: LocationWhereUniqueInput!): Location!
  createVehiclecategory(userId: String!, createVehiclecategoryInput: CreateVehiclecategoryInput!): VehicleCategory!
  updateVehicleCategory(where: VehicleCategoryWhereUniqueInput!, updateVehiclecategoryInput: UpdateVehiclecategoryInput!): VehicleCategory!
  deleteVehiclecategory(where: VehicleCategoryWhereUniqueInput!): VehicleCategory!
  createSeller(userId: String!, createSellerInput: CreateSellerInput!): Seller!
  updateSeller(where: SellerWhereUniqueInput!, updateSellerInput: UpdateSellerInput!): Seller!
  deleteSeller(where: SellerWhereUniqueInput!): Seller!
  createVehicle(userId: String!, createdBy: String!, createVehicleInput: CreateVehicleInput!): Vehicle!
  updateVehicle(where: VehicleWhereUniqueInput!, updateVehicleInput: UpdateVehicleInput!): Vehicle!
  deleteVehicle(where: VehicleWhereUniqueInput!): Vehicle!
}

input CreateUserInput {
  email: String
  username: String
  firstName: String
  lastName: String
  businessName: String
  mobile: String!
  password: String
  BalanceEMDAmount: Float
  pancardNo: String
  idProofNo: String
  country: String
  city: String
  userCategory: String
  tempToken: Float
  accessToken: String
  role: UserRoleType
}

enum UserRoleType {
  admin
  staff
  seller
  dealer
}

input UpdateUserInput {
  email: String
  username: String
  firstName: String
  lastName: String
  businessName: String
  mobile: String
  password: String
  BalanceEMDAmount: Float
  pancardNo: String
  idProofNo: String
  country: String
  city: String
  userCategory: String
  tempToken: Float
  role: UserRoleType!
}

input LoginUserInput {
  mobile: String!
  password: String!
}

input CreateStateInput {
  name: String!
}

input UpdateStateInput {
  name: String
  createdById: String
}

input CreateLocationInput {
  name: String!
}

input UpdateLocationInput {
  name: String
  stateId: String
}

input CreateVehiclecategoryInput {
  name: String!
}

input UpdateVehiclecategoryInput {
  name: String
}

input CreateSellerInput {
  name: String!
  contactPerson: String!
  GSTNumber: String!
  billingContactPerson: String!
  mobile: String!
  nationalHead: String!
  logo: String!
}

input UpdateSellerInput {
  name: String
  contactPerson: String
  GSTNumber: String
  billingContactPerson: String
  mobile: String
  nationalHead: String
  logo: String
}

input CreateVehicleInput {
  registrationNumber: String!
  bidTimeExpire: String!
  bidStartTime: String!
  bidAmountUpdate: Float
  currentBidAmount: Float
  startBidAmount: Float
  loanAgreementNo: String!
  registeredOwnerName: String!
  quoteIncreament: Float
  make: String!
  model: String!
  varient: String!
  categoty: String!
  fuel: String!
  type: String!
  rcStatus: String!
  yearOfManufacture: Float
  ownership: Float
  mileage: Float
  kmReading: Float
  insuranceStatus: String!
  yardLocation: String!
  startPrice: Float
  reservePrice: Float
  repoDt: String
  veicleLocation: String!
  vehicleRemarks: String!
  auctionManager: String!
  parkingCharges: String!
  insurance: String!
  insuranceValidTill: String
  tax: String!
  taxValidityDate: String
  fitness: String!
  permit: String!
  fitnessPermit: String!
  engineNo: String!
  chassisNo: String!
  image: String!
  inspectionLink: String!
  autobseContact: String!
  autobse_contact_person: String!
  vehicleCondition: String!
  powerSteering: String!
  shape: String!
  color: String!
  state: String!
  city: String!
  area: String!
  paymentTerms: String!
  dateOfRegistration: String
  hypothication: String!
  climateControl: String!
  doorCount: Float
  gearBox: String!
  buyerFees: String!
  rtoFine: String!
  parkingRate: String!
  approxParkingCharges: String!
  clientContactPerson: String!
  clientContactNo: String!
  additionalRemarks: String!
  lotNumber: Float
}

input UpdateVehicleInput {
  registrationNumber: String
  bidTimeExpire: String
  bidStartTime: String
  bidAmountUpdate: Float
  currentBidAmount: Float
  startBidAmount: Float
  loanAgreementNo: String
  registeredOwnerName: String
  quoteIncreament: Float
  make: String
  model: String
  varient: String
  categoty: String
  fuel: String
  type: String
  rcStatus: String
  yearOfManufacture: Float
  ownership: Float
  mileage: Float
  kmReading: Float
  insuranceStatus: String
  yardLocation: String
  startPrice: Float
  reservePrice: Float
  repoDt: String
  veicleLocation: String
  vehicleRemarks: String
  auctionManager: String
  parkingCharges: String
  insurance: String
  insuranceValidTill: String
  tax: String
  taxValidityDate: String
  fitness: String
  permit: String
  fitnessPermit: String
  engineNo: String
  chassisNo: String
  image: String
  inspectionLink: String
  autobseContact: String
  autobse_contact_person: String
  vehicleCondition: String
  powerSteering: String
  shape: String
  color: String
  state: String
  city: String
  area: String
  paymentTerms: String
  dateOfRegistration: String
  hypothication: String
  climateControl: String
  doorCount: Float
  gearBox: String
  buyerFees: String
  rtoFine: String
  parkingRate: String
  approxParkingCharges: String
  clientContactPerson: String
  clientContactNo: String
  additionalRemarks: String
  lotNumber: Float
}